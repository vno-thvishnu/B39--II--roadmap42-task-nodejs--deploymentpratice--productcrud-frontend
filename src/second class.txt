import './App.css';
import { useEffect, useState } from 'react';
import axios from 'axios';
import "../node_modules/bootstrap/dist/css/bootstrap.min.css"
import { useFormik } from 'formik';
function App() {
const [productList, setProductList] = useState ([])
const [isEdit,setEdit] = useState(false)
const [productId,setProductId] = useState(null)

useEffect(()=>{
const fetchData = async() =>{
  try{
   const products= await axios.get("http://localhost:3006/products")
   setProductList(products.data)
  }catch (error){
    alert ("something went wrong")

  }
}
fetchData()
},[])
const formik = useFormik({
  initialValues :{
    name : "",
    price : ""
  },
  onSubmit : async (values)=>{
    try{
      if(!isEdit){
        const product = await axios.post("http://localhost:3006/product",values)
      setProductList([...productList,{...values,id:product.data.id}])
      formik.resetForm()
      }else {
        await axios.put(`http://localhost:3006/product/${productId}`,values)
  const pIndex = productList.findIndex(p =>p.id==productId)
productList[pIndex]=values
setProductList([...productList])
formik.resetForm()
setEdit(false)
      }
    } catch (error){
      alert ("something went wrong")
    }
  }
})
const deleteProduct = async(id) =>{
try {
  await axios.delete(`http://localhost:3006/product/${id}`)
  const pIndex = productList.findIndex(p =>p.id==id)
  productList.splice(pIndex,1)
  setProductList([...productList])
} catch (error) {
  alert ("something went wrong")

}
}
const editProduct = async(id) =>{
  try{
   const product= await axios.get(`http://localhost:3006/product/${id}`)
    formik.setValues(product.data)
    setProductId(id)
    setEdit(true)
  } catch ( error){
    alert ("something went wrong")

  }
}

  return ( 
    <div className="container">
      <div className="row">
        <div className='col-lg-6'>
          <form onSubmit={formik.handleSubmit}>
            <div className="row">
        <div className='col-lg-6'>
          <label >Name</label>
          <input type={"text"} className="form-control" name="name" value={formik.values.name}
          onChange={formik.handleChange}/>
        </div>
        <div className='col-lg-6'>
        <label >Price</label>
          <input type={"text"} className="form-control"  name="price" value={formik.values.price}
          onChange={formik.handleChange}/>
        </div>
</div>
<div className='row mt-2'>
<div className='col-lg-6'>
          <input type={"submit"} value ={isEdit ? 'Update' : 'Submit'}className="btn btn-primary"/>
        </div>

</div>
          </form>

        </div>
        <div className='col-lg-6'>
          
          <table class="table table-striped">
      <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Price</th>
      <th scope="col">Action</th>
    </tr>
  </thead>
  <tbody>
   {
    productList.map((product,index)=>{
     return <tr>
      <th scope="row">{product.id}</th>
      <td>{product.name}</td>
      <td>{product.price}</td>
      <td>
      <button onClick={()=>editProduct(product.id)} className='btn btn-info btn-sm'>Edit</button>
      <button onClick={()=>deleteProduct(product.id)} className='btn btn-danger btn-sm'>Delete</button>
            </td>

    </tr>
    })
   }
   
  </tbody>

  </table>
          

        </div>

      </div>
    </div>
  );
}

export default App;
